import pandas as pd
import scipy.stats as stats
import matplotlib.pyplot as plt

# Load the CSV file
file_path = '/mnt/data/your_file_path.csv'  # Update with the path to your CSV file
data = pd.read_csv(file_path)

# Check the first few rows of the data to ensure it is loaded correctly
print(data.head())

# Aggregate total crime counts across all categories for each city and year
data_agg = data.groupby(['year', 'city', 'population']).agg({'count': 'sum'}).reset_index()

# Calculate 'Total Crime Rate per 100,000 people'
data_agg['Crime per 100,000'] = (data_agg['count'] / data_agg['population']) * 100000

# Perform one-way ANOVA to compare 'Crime per 100,000' across cities
anova_result = stats.f_oneway(
    data_agg[data_agg['city'] == 'LA']['Crime per 100,000'],
    data_agg[data_agg['city'] == 'Austin']['Crime per 100,000'],
    data_agg[data_agg['city'] == 'Dallas']['Crime per 100,000']
)

# Save the results to a CSV file
output_file = '/mnt/data/anova_results.csv'
anova_results_df = pd.DataFrame({'F-statistic': [anova_result.statistic], 'p-value': [anova_result.pvalue]})
anova_results_df.to_csv(output_file, index=False)
print(f'ANOVA results saved to {output_file}')

# Display the ANOVA results and hypothesis decision
print('ANOVA Results:')
print(f'F-statistic: {anova_result.statistic:.4f}')
print(f'p-value: {anova_result.pvalue:.4f}')

# Determine whether to reject or fail to reject the null hypothesis
significance_level = 0.05
if anova_result.pvalue < significance_level:
    print(f'Since the p-value ({anova_result.pvalue:.4f}) is less than {significance_level}, we reject the null hypothesis.')
    print('This suggests that there is a significant difference in crime rates across the cities, potentially indicating that political leanings may affect crime rates.')
else:
    print(f'Since the p-value ({anova_result.pvalue:.4f}) is greater than {significance_level}, we fail to reject the null hypothesis.')
    print('This suggests that there is no significant evidence to conclude that political leanings affect crime rates.')

# Plot the average "Crime per 100,000" for each city over the entire period
average_crime_per_100k = data_agg.groupby('city')['Crime per 100,000'].mean()

plt.figure(figsize=(10, 6))
average_crime_per_100k.plot(kind='bar', color=['blue', 'orange', 'green'])
plt.title('Average Total Crime Rate per 100,000 People by City (2014-2023)')
plt.xlabel('City')
plt.ylabel('Average Total Crime Rate per 100,000 People')
plt.xticks(rotation=0)
plt.tight_layout()
plt.show()
